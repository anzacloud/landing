"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.getRuntimeConfig = exports.withDefaultConfig = exports.updateConfig = exports.defaultConfig = exports.transformSitemap = exports.loadConfig = void 0;
const deepmerge_1 = require("@corex/deepmerge");
const file_1 = require("../file");
exports.loadConfig = (path) => {
    const baseConfig = file_1.loadFile(path);
    return exports.withDefaultConfig(baseConfig);
};
exports.transformSitemap = (config, url) => {
    return {
        loc: url,
        changefreq: config.changefreq,
        priority: config.priority,
        lastmod: config.autoLastmod ? new Date().toISOString() : undefined,
    };
};
exports.defaultConfig = {
    sourceDir: '.next',
    outDir: 'public',
    priority: 0.7,
    changefreq: 'daily',
    sitemapSize: 5000,
    autoLastmod: true,
    trailingSlash: false,
    exclude: [],
    transform: exports.transformSitemap,
    robotsTxtOptions: {
        policies: [
            {
                userAgent: '*',
                allow: '/',
            },
        ],
        additionalSitemaps: [],
    },
};
exports.updateConfig = (currConfig, newConfig) => {
    return deepmerge_1.merge([currConfig, newConfig], {
        arrayMergeType: 'overwrite',
    });
};
exports.withDefaultConfig = (config) => {
    return exports.updateConfig(exports.defaultConfig, config);
};
exports.getRuntimeConfig = (runtimePaths) => {
    const exportMarkerConfig = file_1.loadFile(runtimePaths.EXPORT_MARKER, false);
    return {
        trailingSlash: exportMarkerConfig
            ? exportMarkerConfig.exportTrailingSlash
            : undefined,
    };
};
