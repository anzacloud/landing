"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const _1 = require(".");
const config_1 = require("../../fixtures/config");
const manifest_1 = require("../../fixtures/manifest");
describe('next-sitemap/createUrlSet', () => {
    test('without exclusion', () => {
        const urlset = _1.createUrlSet(config_1.sampleConfig, manifest_1.sampleManifest);
        expect(urlset).toStrictEqual([
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-0',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-1',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-2',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-3',
            },
        ]);
    });
    test('with exclusion', () => {
        const urlset = _1.createUrlSet({
            ...config_1.sampleConfig,
            exclude: ['/', '/page-0', '/page-2'],
        }, manifest_1.sampleManifest);
        expect(urlset).toStrictEqual([
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-1',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-3',
            },
        ]);
    });
    test('with trailing slash', () => {
        const urlset = _1.createUrlSet({
            ...config_1.sampleConfig,
            trailingSlash: true,
        }, manifest_1.sampleManifest);
        expect(urlset).toStrictEqual([
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-0/',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-1/',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-2/',
            },
            {
                changefreq: 'daily',
                lastmod: expect.any(String),
                priority: 0.7,
                loc: 'https://example.com/page-3/',
            },
        ]);
    });
    test('with custom transform', () => {
        const urlset = _1.createUrlSet({
            ...config_1.sampleConfig,
            trailingSlash: true,
            transform: (_, url) => {
                if (!['/', '/page-2'].includes(url)) {
                    return;
                }
                return {
                    loc: url,
                    changefreq: 'yearly',
                };
            },
        }, manifest_1.sampleManifest);
        expect(urlset).toStrictEqual([
            {
                changefreq: 'yearly',
                loc: 'https://example.com/',
            },
            {
                changefreq: 'yearly',
                loc: 'https://example.com/page-2/',
            },
        ]);
    });
});
